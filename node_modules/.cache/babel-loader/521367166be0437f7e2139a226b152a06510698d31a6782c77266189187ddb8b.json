{"ast":null,"code":"// Imports the shuffleArray function from the utils module\nimport { shuffleArray } from './utils';\n\n// Defines the Question type, which represents a single question object\n\n// Defines the Difficulty enum, which represents the difficulty levels\nexport let Difficulty = /*#__PURE__*/function (Difficulty) {\n  Difficulty[\"EASY\"] = \"easy\";\n  Difficulty[\"MEDIUM\"] = \"medium\";\n  Difficulty[\"HARD\"] = \"hard\";\n  return Difficulty;\n}({});\n\n// Defines the QuestionsState type, which represents a single question object with an additional answers array\n\n// Defines the fetchQuizQuestions function, which fetches a specified number of questions with a specified difficulty level\nexport const fetchQuizQuestions = async (amount, difficulty) => {\n  // Sets the endpoint URL based on the amount and difficulty parameters\n  const endpoint = `https://opentdb.com/api.php?amount=${amount}&difficulty=${difficulty}&type=multiple`;\n  // Fetches the data from the endpoint\n  const data = await (await fetch(endpoint)).json();\n  // Maps over the results array and return a new array of questions with the answers array shuffled\n  return data.results.map(question => ({\n    ...question,\n    answers: shuffleArray([...question.incorrect_answers, question.correct_answer])\n  }));\n};","map":{"version":3,"names":["shuffleArray","Difficulty","fetchQuizQuestions","amount","difficulty","endpoint","data","fetch","json","results","map","question","answers","incorrect_answers","correct_answer"],"sources":["/Users/duaaimran/react-quiz/src/API.ts"],"sourcesContent":["// Imports the shuffleArray function from the utils module\nimport { shuffleArray } from './utils';\n\n// Defines the Question type, which represents a single question object\nexport type Question = {\n  // The category of the question\n  category: string;\n  // The correct answer to the question\n  correct_answer: string;\n  // The difficulty of the question\n  difficulty: string;\n  // The incorrect answers to the question\n  incorrect_answers: string[];\n  // The question itself\n  question: string;\n  // The type of question (in this case, multiple choice)\n  type: string;\n};\n\n// Defines the Difficulty enum, which represents the difficulty levels\nexport enum Difficulty {\n  // The easy difficulty level\n  EASY = \"easy\",\n  // The medium difficulty level\n  MEDIUM = \"medium\",\n  // The hard difficulty level\n  HARD = \"hard\",\n}\n\n// Defines the QuestionsState type, which represents a single question object with an additional answers array\nexport type QuestionsState = Question & { answers: string[] };\n\n// Defines the fetchQuizQuestions function, which fetches a specified number of questions with a specified difficulty level\nexport const fetchQuizQuestions = async (\n  // The number of questions to fetch\n  amount: number,\n  // The difficulty level of the questions to fetch\n  difficulty: Difficulty\n): Promise<QuestionsState[]> => {\n  // Sets the endpoint URL based on the amount and difficulty parameters\n  const endpoint = `https://opentdb.com/api.php?amount=${amount}&difficulty=${difficulty}&type=multiple`;\n  // Fetches the data from the endpoint\n  const data = await (await fetch(endpoint)).json();\n  // Maps over the results array and return a new array of questions with the answers array shuffled\n  return data.results.map((question: Question) => ({\n    ...question,\n    answers: shuffleArray([...question.incorrect_answers, question.correct_answer])\n  }))\n};"],"mappings":"AAAA;AACA,SAASA,YAAY,QAAQ,SAAS;;AAEtC;;AAgBA;AACA,WAAYC,UAAU,0BAAVA,UAAU;EAAVA,UAAU;EAAVA,UAAU;EAAVA,UAAU;EAAA,OAAVA,UAAU;AAAA;;AAStB;;AAGA;AACA,OAAO,MAAMC,kBAAkB,GAAG,MAAAA,CAEhCC,MAAc,EAEdC,UAAsB,KACQ;EAC9B;EACA,MAAMC,QAAQ,GAAI,sCAAqCF,MAAO,eAAcC,UAAW,gBAAe;EACtG;EACA,MAAME,IAAI,GAAG,MAAM,CAAC,MAAMC,KAAK,CAACF,QAAQ,CAAC,EAAEG,IAAI,CAAC,CAAC;EACjD;EACA,OAAOF,IAAI,CAACG,OAAO,CAACC,GAAG,CAAEC,QAAkB,KAAM;IAC/C,GAAGA,QAAQ;IACXC,OAAO,EAAEZ,YAAY,CAAC,CAAC,GAAGW,QAAQ,CAACE,iBAAiB,EAAEF,QAAQ,CAACG,cAAc,CAAC;EAChF,CAAC,CAAC,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}